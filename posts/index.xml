<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Phi&#39;s Blog</title>
    <link>https://philyc.github.io/posts/</link>
    <description>Recent content in Posts on Phi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Mar 2020 20:44:05 +0800</lastBuildDate>
    
	<atom:link href="https://philyc.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《CSAPP》笔记——第九章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B9%9D%E7%AB%A0/</link>
      <pubDate>Sat, 14 Mar 2020 20:44:05 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B9%9D%E7%AB%A0/</guid>
      <description>1.虚拟内存 虚拟内存： 现代系统提供对主存的抽象概念。虚拟内存是计算机系统内存管理的一种技术，它使得应用程序认为它拥有连续的可用的内存（一个连</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第八章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%85%AB%E7%AB%A0/</link>
      <pubDate>Sat, 14 Mar 2020 13:54:26 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%85%AB%E7%AB%A0/</guid>
      <description>1.控制流与异常 系统必须能对系统状态的变化做出反应，这些系统状态不是被内部程序变量捕获，也不一定和程序的执行相关 现代系统通过使 控制流 发生突变</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第七章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%83%E7%AB%A0/</link>
      <pubDate>Wed, 11 Mar 2020 11:48:12 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%83%E7%AB%A0/</guid>
      <description>1.链接 链接 是将各种代码和数据片段收集并组合成为一个单一文件的过程 可执行于编译时，即在源代码翻译成机器代码 可执行于加载时，即程序被加载器加载</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第六章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%85%AD%E7%AB%A0/</link>
      <pubDate>Wed, 11 Mar 2020 10:35:11 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%85%AD%E7%AB%A0/</guid>
      <description>1.存储器结构 层次结构是基于局部性原理而构建的, 即程序相邻的代码访问的数据和指令是距离很近的, 这样层次结构才能发挥它的效果, 否则程序就会运行</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第五章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%94%E7%AB%A0/</link>
      <pubDate>Tue, 10 Mar 2020 23:46:53 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%94%E7%AB%A0/</guid>
      <description>第一层次的优化是设计好数据结构和算法，其次才是编码技巧 1.优化缺陷 某些情况下编译器会放弃对代码的优化 内存别名使用无法优化: 编译器无法确定程序</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第四章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%9B%9B%E7%AB%A0/</link>
      <pubDate>Tue, 10 Mar 2020 18:34:07 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E5%9B%9B%E7%AB%A0/</guid>
      <description>1.指令集体系 内存：概念上来说是一个很大的字节数组，保存程序和数据 虚拟内存：引用内存位置，硬件和操作系统软件联合将虚拟地址翻译成实际或物理地</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第三章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%89%E7%AB%A0/</link>
      <pubDate>Tue, 10 Mar 2020 15:48:18 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%89%E7%AB%A0/</guid>
      <description>1.机器代码 采用指令集体系结构或指令集架构定义机器级程序的格式和行为。 程序计数器 ： 给出要执行下一条指令在内存中地址 整数寄存器 ： 存储地址或整数</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第二章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%8C%E7%AB%A0/</link>
      <pubDate>Tue, 10 Mar 2020 12:31:32 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%BA%8C%E7%AB%A0/</guid>
      <description>1.信息存储 大多数计算机使用8位的块(字节)，作为最小的可寻址的存储单位。 字长： 指明整数和指针数据的标称大小，决定虚拟地址空间的最大大小。对</description>
    </item>
    
    <item>
      <title>《CSAPP》笔记——第一章</title>
      <link>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%80%E7%AB%A0/</link>
      <pubDate>Sun, 08 Mar 2020 20:34:36 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/csapp%E7%AC%94%E8%AE%B0%E7%AC%AC%E4%B8%80%E7%AB%A0/</guid>
      <description>1.编译过程 编译系统包括： 预处理器——处理字符#开头的命令，即： 将头文件的内容插入程序文本中 宏定义替换 条件编译(#if #ifdef)，不被编</description>
    </item>
    
    <item>
      <title>Linux命令总结</title>
      <link>https://philyc.github.io/2020/linux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 03 Mar 2020 18:27:27 +0800</pubDate>
      
      <guid>https://philyc.github.io/2020/linux%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>查看目录 ls -a 显示指定目录下所有子目录与文件，包括隐藏文件 -l 以列表方式显示文件的详细信息 -h 配合-l以人性化方式显示文件大小 ls通配符 *代表任意</description>
    </item>
    
    <item>
      <title>Git命令总结</title>
      <link>https://philyc.github.io/2019/git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 21 Dec 2019 12:32:48 +0800</pubDate>
      
      <guid>https://philyc.github.io/2019/git%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid>
      <description>git init 进入一个项目目录,执行git init,会在本地新建一个repo,在当前文件夹下创建一个.git文件夹。 git clone 格式： git clone [url] 取一个url对应的</description>
    </item>
    
  </channel>
</rss>